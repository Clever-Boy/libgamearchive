#define {
	// Must match the PlatformToolset options in appveyor.yml
	toolsets: "v140,v140_xp";
}

configurations {
	UserPlatformToolset {
		// Needed for VS2015 support
		key = "PlatformToolset";
		choices: ${toolsets};
	};
}

nuget {
	nuspec {
		id = libgamearchive;
		// "@version" is replaced by the current Appveyor build number in the
		// pre-deployment script.
		version: @version;
		title: libgamearchive;
		authors: {Adam Nielsen};
		owners: {Malvineous};
		licenseUrl: "http://www.gnu.org/licenses/gpl-3.0.en.html";
		projectUrl: "https://github.com/Malvineous/libgamearchive";
		iconUrl: "http://www.shikadi.net/gfx/malvineous.png";
		copyright: "Copyright 2010-2016 Adam Nielsen";
		requireLicenseAcceptance: false;
		description: "Read/write/modify archive files used by DOS games";
		releaseNotes: "Initial release.";
		tags: {camoto, native, nativepackage};
	}
	dependencies {
		packages : {
			boost/1.60,
			boost_system-vc140/1.60,
			boost_filesystem-vc140/1.60,
			boost_program_options-vc140/1.60,
			libgamecommon/2.0.0-beta60
		};
	}
	files {
		#defines {
			SDK_ROOT = "..\\";
			SolutionDir = ".\\";
		}
		nestedIncludeBase: {
			#destination = ${d_include}camoto;
				"${SDK_ROOT}include\camoto\*.hpp"
		};
		nestedInclude: {
			#destination = ${d_include}camoto\gamearchive;
				"${SDK_ROOT}include\camoto\gamearchive\*.hpp"
		};
		docs: {
			"${SDK_ROOT}README.md"
		};
		(${toolsets}, "Win32,x64", "release,debug") => {
			[${0},${1},${2}] {
				bin: {
					${SolutionDir}${0}\${1}\${2}\${pkgname}.dll,
					${SolutionDir}${0}\${1}\${2}\game*.exe
				};
				lib: ${SolutionDir}${0}\${1}\${2}\${pkgname}.lib;
				symbols: ${SolutionDir}${0}\${1}\${2}\${pkgname}.pdb;
			}
		}
	}
	targets {
		Defines += HAS_LIBGAMEARCHIVE;
	}
}
